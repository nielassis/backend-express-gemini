// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String       @id @default(uuid())
  username   String
  email      String
  Workspaces Workspaces[]
  Employes   Employes[]
  createdAt  DateTime     @default(now())
}

model Employes {
  id          String     @id @default(uuid())
  ownerId     String
  owner       Users      @relation(fields: [ownerId], references: [id])
  workspaceId String
  workspace   Workspaces @relation(fields: [workspaceId], references: [id])

  username  String
  login     String
  password  String
  createdAt DateTime @default(now())
}

model Workspaces {
  id         String       @id @default(uuid())
  ownerId    String
  owner      Users        @relation(fields: [ownerId], references: [id])
  name       String
  Employes   Employes[]
  Products   Products[]
  Orders     Orders[]
  DoneOrders DoneOrders[]
  createdAt  DateTime     @default(now())
}

model Products {
  id          String     @id @default(uuid())
  workspaceId String
  workspace   Workspaces @relation(fields: [workspaceId], references: [id])
  Orders      Orders[]
  name        String
  image       String
  description String
  price       Decimal    @db.Decimal(10, 2)
  stock       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Orders {
  id          String       @id @default(uuid())
  workspaceId String
  workspace   Workspaces   @relation(fields: [workspaceId], references: [id])
  ProductId   String
  Product     Products     @relation(fields: [ProductId], references: [id])
  clientName  String
  adress      String
  totalAmount Decimal      @db.Decimal(10, 2)
  status      String
  DoneOrders  DoneOrders[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model DoneOrders {
  id          String     @id @default(uuid())
  workspaceId String
  workspace   Workspaces @relation(fields: [workspaceId], references: [id])
  OrderId     String
  Order       Orders     @relation(fields: [OrderId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
